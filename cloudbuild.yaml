# substitutions:
#   _SERVICE_NAME: 'cicd-gcp'        # Your Cloud Run service name
#   _DEPLOY_PIPELINE: 'my-pipeline' # Your Cloud Deploy pipeline name
#   _DEPLOY_REGION: 'us-central1'    # Region for Cloud Deploy

# steps:
# # Build Docker image 
# - name: 'gcr.io/cloud-builders/docker'
#   args: [
#     'build',
#     '-t', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA',
#     '-f', 'app/Dockerfile',
#     '.'
#   ]
#   id: 'Build Docker Image'

# # Push image to Artifact Registry
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA']
#   id: 'Push Docker Image'

# Create Cloud Deploy release and ensure pipeline/targets are up-to-date
# - name: 'google/cloud-sdk:latest'
#   entrypoint: 'sh'
#   args:
#   - -xe
#   - -c
#   - |
#     gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1 --project=black-cirrus-461305-f6
#     # Always apply targets to ensure they are up-to-date with the YAML files
#     gcloud deploy apply --file deploy/dev.yaml --region=us-central1 --project=black-cirrus-461305-f6
#     gcloud deploy apply --file deploy/prod.yaml --region=us-central1 --project=black-cirrus-461305-f6
#     gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=my-pipeline --region=us-central1 --project=black-cirrus-461305-f6 --skaffold-file=skaffold.yaml

# - name: 'google/cloud-sdk:latest'
#   entrypoint: 'sh'
#   args:
#   - -xe
#   - -c
#   - |
#     gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1 --project=black-cirrus-461305-f6
#     gcloud deploy apply --file deploy/dev.yaml --region=us-central1 --project=black-cirrus-461305-f6
#     gcloud deploy apply --file deploy/prod.yaml --region=us-central1 --project=black-cirrus-461305-f6
#     gcloud deploy releases create 'app-release-${SHORT_SHA}' --project=black-cirrus-461305-f6 --region=us-central1 --delivery-pipeline=my-pipeline --images=gcr.io/black-cirrus-461305-f6/cicd-gcp=gcr.io/black-cirrus-461305-f6/cicd-gcp@sha256:60921f7eb11df34c4c4ee38baa6ff32955f1b03a6ad60a5e2e0bcb1a2c3f1700



# - name: gcr.io/google.com/cloudsdktool/cloud-sdk
#   entrypoint: gcloud
#   args:
#   - beta
#   - deploy
#   - releases
#   - create
#   - release-$COMMIT_SHA
#   - --delivery-pipeline=$_DEPLOY_PIPELINE
#   - --region=$_DEPLOY_REGION
#   - --images=$_SERVICE_NAME=gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA
#   - --source=.


# options:
#   logging: CLOUD_LOGGING_ONLY

# substitutions:
#   _SERVICE_NAME: 'cicd-gcp'
#   _DEPLOY_PIPELINE: 'my-pipeline'
#   _DEPLOY_REGION: 'us-central1'
#-----------------------------------------------
# steps:
#   # Build Docker image
#   - name: 'gcr.io/cloud-builders/docker'
#     args: [
#       'build',
#       '-t', 'gcr.io/$PROJECT_ID/cicd-gcp:$COMMIT_SHA',
#       '-f', 'app/Dockerfile',
#       '.'
#     ]

#   # Push image to Artifact Registry
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['push', 'gcr.io/$PROJECT_ID/cicd-gcp:$COMMIT_SHA']

#   # Cloud Deploy release (Skaffold-free)
#   - name: gcr.io/google.com/cloudsdktool/cloud-sdk
#     entrypoint: bash
#     args:
#     - -c
#     - |
#       # Apply configurations
#       gcloud deploy apply --file=deploy/pipeline.yaml --region=us-central1 --project=black-cirrus-461305-f6
#       gcloud deploy apply --file=deploy/dev.yaml --region=us-central1 --project=black-cirrus-461305-f6
#       gcloud deploy apply --file=deploy/prod.yaml --region=us-central1 --project=black-cirrus-461305-f6
      
#       # Create release with explicit source and image
#       gcloud beta deploy releases create release-$COMMIT_SHA \
#         --delivery-pipeline=my-pipeline \
#         --region=us-central1 \
#         --images=cicd-gcp=gcr.io/black-cirrus-461305-f6/cicd-gcp:$COMMIT_SHA \
#         --source=. \
#         --project=black-cirrus-461305-f6

# options:
#   logging: CLOUD_LOGGING_ONLY



steps:
  # Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/cicd-gcp:$COMMIT_SHA',
      '-f', 'app/Dockerfile',
      '.'
    ]

  # Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/cicd-gcp:$COMMIT_SHA']

  # Apply configurations
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
    - -c
    - |
      gcloud deploy apply --file=deploy/pipeline.yaml --region=us-central1 --project=$PROJECT_ID
      gcloud deploy apply --file=deploy/dev.yaml --region=us-central1 --project=$PROJECT_ID
      gcloud deploy apply --file=deploy/prod.yaml --region=us-central1 --project=$PROJECT_ID
      gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=my-pipeline --region=us-central1 --project=black-cirrus-461305-f6 --images=app=gcr.io/black-cirrus-461305-f6/cicd-gcp:latest --source=.

  # Create release with explicit image reference (no Skaffold)
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: gcloud
  #   args:
  #   - beta
  #   - deploy
  #   - releases
  #   - create
  #   - release-$COMMIT_SHA
  #   - --delivery-pipeline=my-pipeline
  #   - --region=us-central1
  #   - --images=cicd-gcp=gcr.io/$PROJECT_ID/cicd-gcp:$COMMIT_SHA
  #   - --to-target=dev
  #   - --project=$PROJECT_ID
    

options:
  logging: CLOUD_LOGGING_ONLY
